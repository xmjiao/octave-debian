@c DO NOT EDIT!  Generated automatically by genpropdoc.m.

@c Copyright (C) 2014-2016 Pantxo Diribarne
@c
@c This file is part of Octave.
@c
@c Octave is free software; you can redistribute it and/or modify it
@c under the terms of the GNU General Public License as published by the
@c Free Software Foundation; either version 3 of the License, or (at
@c your option) any later version.
@c
@c Octave is distributed in the hope that it will be useful, but WITHOUT
@c ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
@c FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
@c for more details.
@c
@c You should have received a copy of the GNU General Public License
@c along with Octave; see the file COPYING.  If not, see
@c <http://www.gnu.org/licenses/>.

@table @asis

@anchor{XREFlight__modified__}
@cindex light __modified__
@item @code{__modified__}: @qcode{"off"} | @{@qcode{"on"}@}



@anchor{XREFlightbeingdeleted}
@cindex light beingdeleted
@item @code{beingdeleted}: @{@qcode{"off"}@} | @qcode{"on"}



@anchor{XREFlightbusyaction}
@cindex light busyaction
@item @code{busyaction}: @qcode{"cancel"} | @{@qcode{"queue"}@}



@anchor{XREFlightbuttondownfcn}
@cindex light buttondownfcn
@item @code{buttondownfcn}: string | function handle, def. @code{[](0x0)}
For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFlightchildren}
@cindex light children
@item @code{children} (read-only): vector of graphics handles, def. @code{[](0x1)}
@code{children} is unused.


@anchor{XREFlightclipping}
@cindex light clipping
@item @code{clipping}: @qcode{"off"} | @{@qcode{"on"}@}
If @code{clipping} is @qcode{"on"}, the light is clipped in its parent axes limits.


@anchor{XREFlightcolor}
@cindex light color
@item @code{color}: colorspec, def. @code{[1   1   1]}
Color of the light source.  @xref{Colors, ,colorspec}.


@anchor{XREFlightcreatefcn}
@cindex light createfcn
@item @code{createfcn}: string | function handle, def. @code{[](0x0)}
Callback function executed immediately after light has been created.  Function is set by using default property on root object, e.g., @code{set (0, "defaultlightcreatefcn", 'disp ("light created!")')}.

For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFlightdeletefcn}
@cindex light deletefcn
@item @code{deletefcn}: string | function handle, def. @code{[](0x0)}
Callback function executed immediately before light is deleted.

For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFlighthandlevisibility}
@cindex light handlevisibility
@item @code{handlevisibility}: @qcode{"callback"} | @qcode{"off"} | @{@qcode{"on"}@}
If @code{handlevisibility} is @qcode{"off"}, the light's handle is not visible in its parent's "children" property.


@anchor{XREFlighthittest}
@cindex light hittest
@item @code{hittest}: @qcode{"off"} | @{@qcode{"on"}@}



@anchor{XREFlightinterruptible}
@cindex light interruptible
@item @code{interruptible}: @qcode{"off"} | @{@qcode{"on"}@}



@anchor{XREFlightparent}
@cindex light parent
@item @code{parent}: graphics handle
Handle of the parent graphics object.


@anchor{XREFlightposition}
@cindex light position
@item @code{position}: def. @code{[1   0   1]}
Position of the light source.


@anchor{XREFlightselected}
@cindex light selected
@item @code{selected}: @{@qcode{"off"}@} | @qcode{"on"}



@anchor{XREFlightselectionhighlight}
@cindex light selectionhighlight
@item @code{selectionhighlight}: @qcode{"off"} | @{@qcode{"on"}@}



@anchor{XREFlightstyle}
@cindex light style
@item @code{style}: @{@qcode{"infinite"}@} | @qcode{"local"}
This string defines whether the light emanates from a light source at infinite distance (@qcode{"infinite"}) or from a local point source (@qcode{"local"}).


@anchor{XREFlighttag}
@cindex light tag
@item @code{tag}: string, def. @qcode{""}
A user-defined string to label the graphics object.


@anchor{XREFlighttype}
@cindex light type
@item @code{type} (read-only): string
Class name of the graphics object.  @code{type} is always @qcode{"light"}


@anchor{XREFlightuicontextmenu}
@cindex light uicontextmenu
@item @code{uicontextmenu}: graphics handle, def. @code{[](0x0)}
Graphics handle of the uicontextmenu object that is currently associated to this light object.


@anchor{XREFlightuserdata}
@cindex light userdata
@item @code{userdata}: Any Octave data, def. @code{[](0x0)}
User-defined data to associate with the graphics object.


@anchor{XREFlightvisible}
@cindex light visible
@item @code{visible}: @qcode{"off"} | @{@qcode{"on"}@}
If @code{visible} is @qcode{"off"}, the light is not rendered on screen.

@end table
Description: Fix saving int8 and uint8 in plain text format
Origin: upstream, http://hg.savannah.gnu.org/hgweb/octave/raw-rev/284e5c87f27b
Bug: http://savannah.gnu.org/bugs/?40980
Bug-Debian: http://bugs.debian.org/732659
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Reviewed-By: Rafael Laboissiere <rafael@laboissiere.net>
Last-Update: 2014-01-11

--- octave-3.8.0.orig/liboctave/util/oct-inttypes.h
+++ octave-3.8.0/liboctave/util/oct-inttypes.h
@@ -1023,6 +1023,50 @@ operator >> (std::istream& is, octave_in
   return is;
 }
 
+// We need to specialise for char and unsigned char because
+// std::operator<< and std::operator>> are overloaded to input and
+// output the ASCII character values instead of a representation of
+// their numerical value (e.g. os << char(10) outputs a space instead
+// of outputting the characters '1' and '0')
+
+template <>
+inline std::ostream&
+operator << (std::ostream& os, const octave_int<int8_t>& ival)
+{
+  os << static_cast<int> (ival.value ());
+  return os;
+}
+
+template <>
+inline std::ostream&
+operator << (std::ostream& os, const octave_int<uint8_t>& ival)
+{
+  os << static_cast<unsigned int> (ival.value ());
+  return os;
+}
+
+
+template <>
+inline std::istream&
+operator >> (std::istream& is, octave_int<int8_t>& ival)
+{
+  int tmp = 0;
+  is >> tmp;
+  ival = static_cast<int8_t> (tmp);
+  return is;
+}
+
+template <>
+inline std::istream&
+operator >> (std::istream& is, octave_int<uint8_t>& ival)
+{
+  unsigned int tmp = 0;
+  is >> tmp;
+  ival = static_cast<uint8_t> (tmp);
+  return is;
+}
+
+
 // Bitwise operations
 
 #define OCTAVE_INT_BITCMP_OP(OP) \
